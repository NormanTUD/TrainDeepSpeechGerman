Bootstrap: docker
From: nvidia/cuda:10.1-base-ubuntu16.04

%labels
	maintainer "Norman Koch <norman.koch@tu-dresden.de>"
	com.nvidia.volumes.needed="nvidia_driver"
	com.nvidia.cuda.version="${CUDA_VERSION}"

%post
	ENABLE_APT_CACHE=1 # Enable if you want to cache apt-get downloads (needs apt-cacher-ng on host)
	ENABLE_PIP_CACHE=0 # Enable if you want to cache pip3 downloads (needs pypi and supervisor on host)
	HOST_IP=192.168.0.132 # Host IP for caching
	if [ "${ENABLE_APT_CACHE}" -eq "1" ]; then
		echo "Acquire::http { Proxy \"http://${HOST_IP}:3142\"; };" > /etc/apt/apt.conf.d/02proxy
	fi

	echo '#!/bin/bash' >> /bin/mypip
	if [ "${ENABLE_PIP_CACHE}" -eq "1" ]; then
		echo "pip3 install -i http://${HOST_IP}:3141/root/pypi/+simple/ --trusted-host ${HOST_IP} \$*" >> /bin/mypip
	else
		echo 'pip3 install $*' >> /bin/mypip
	fi
	chmod +x /bin/mypip

	PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
	LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64
	NVIDIA_VISIBLE_DEVICES=all
	NVIDIA_DRIVER_CAPABILITIES=compute,utility
	NCCL_VERSION=2.3.5
	LIBRARY_PATH=/usr/local/cuda/lib64/stubs

	CUDNN=7.6.2.24-1
	CUDA_VERSION=10.0.130
	CUDA_PKG_VERSION=10-0=10.0.130-1

	echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf
	echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf

	apt-get update

	apt-get --no-install-recommends -y install \
		gnupg-curl \
		software-properties-common \
		apt-transport-https \
		curl

	curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash

	add-apt-repository ppa:marutter/rrutter

	apt-get update

	apt-get --no-install-recommends -y install \
		alembic \
		apt \
		apt-utils \
		build-essential \
		ca-certificates \
		cmake \
		environment-modules \
		git-lfs \
		g++ \
		gcc \
		git \
		libasound2 \
		libcurl4-openssl-dev \
		libegl1-mesa \
		libglu1-mesa-dev \
		libibverbs1 \
		libibverbs-dev \
		libllvm3.8 \
		libmlx4-1 \
		libmlx4-dev \
		libmlx5-1 \
		libmlx5-dev \
		libnss3 \
		libobjc4 \
		libobjc-5-dev \
		libsox-fmt-mp3 \
		libssl1.0.0 \
		libssl-dev \
		libxml2-dev \
		libxslt1-dev \
		locales \
		make \
		python \
		python3 \
		python3-alembic \
		python3-dev \
		python3-pip \
		python3-wheel \
		python-dev \
		python-pip \
		python-virtualenv \
		sed \
		sox \
		uuid-dev \
		vim \
		wget

	apt-mark hold libnccl2 libcudnn7
	apt-get dist-upgrade -y

	locale-gen en_US.UTF-8

	ln -s cuda-${CUDA_PKG_VERSION} /usr/local/cuda

	locale-gen en_US en_US.UTF-8
	dpkg-reconfigure locales

	python3 -m pip install --upgrade pip setuptools

	mypip --upgrade \
		pip==20.0.2 \
		wheel==0.34.2 \
		setuptools==46.1.3

	mypip \
		absl-py==0.9.0 \
		argparse attrdict==2.0.1 \
		bs4 \
		deepspeech \
		futures==3.1.1 \
		json-e==2.3.1 \
		librosa networkx==2.2 \
		optuna opuslib==2.0.0 \
		pandas \
		progressbar2==3.47.0 \
		python-utils==2.3.0 \
		pyxdg \
		pyyaml==5.1.1 \
		requests==2.22.0 \
		semver \
		six==1.13.0 \
		slugid==1.0.7 \
		soundfile \
		sox \
		tensorflow-gpu==1.15.2 \
		virtualenv \
		webrtcvad

	mkdir /ds/

	git clone --depth 1 https://github.com/mozilla/DeepSpeech /ds/

	wget https://raw.githubusercontent.com/lissyx/taskcluster-github-decision/master/requirements.txt -O /ds/requirements.txt

	sed -i 's/pandas==0.25.3/pandas/' /ds/requirements_eval_tflite.txt
	sed -i 's/tensorflow == 1.15.2/tensorflow-gpu == 1.15.2/' /ds/setup.py

	mypip -r /ds/requirements_eval_tflite.txt
	mypip -r /ds/requirements_tests.txt
	mypip -r /ds/requirements_transcribe.txt

	mypip --upgrade -e /ds/

	mkdir /scratch
	mkdir /sw
	mkdir /projects

	apt-get clean
%environment
	export CUDA_VERSION=9.0.176
	export PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
	export LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64
	export NVIDIA_VISIBLE_DEVICES=all
	export NVIDIA_DRIVER_CAPABILITIES=compute,utility
	export NCCL_VERSION=2.3.5
	export LIBRARY_PATH=/usr/local/cuda/lib64/stubs
	export CUDNN_VERSION=7.3.1.20
	
	export CUDNN=7.6.2.24-1
	export CUDA_VERSION=10.0.130
	export CUDA_PKG_VERSION=10-0=10.0.130-1


	export LANG=en_US.UTF-8
	export LC_ALL=en_US.UTF-8

%runscript
	exec /bin/bash "$@"
